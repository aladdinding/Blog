<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>系统设计 - Category - 比特垃圾桶</title><link>https://aladdinding.cn/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link><description>系统设计 - Category - 比特垃圾桶</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aladdinding@qq.com (大猫)</managingEditor><webMaster>aladdinding@qq.com (大猫)</webMaster><lastBuildDate>Mon, 24 Oct 2022 16:20:06 +0800</lastBuildDate><atom:link href="https://aladdinding.cn/categories/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/" rel="self" type="application/rss+xml"/><item><title>设计模式之创建型模式</title><link>https://aladdinding.cn/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 24 Oct 2022 16:20:06 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid><description>单例模式 是保证一个类仅有一个实例，并提供一个访问它的全局访问点。 简单工厂模式 通过专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有</description></item><item><title>面向对象设计原则</title><link>https://aladdinding.cn/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link><pubDate>Fri, 07 Oct 2022 16:06:38 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid><description>面向对象设计原则为支持可维护性复用而诞生，这些原则蕴含在很多设计模式中，它们是从许多设计方案中总结出的指导性原则。 单一职责原则 类的职责单一，</description></item></channel></rss>