<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - 大猫的比特垃圾桶</title><link>https://aladdinding.cn/posts/</link><description>All Posts | 大猫的比特垃圾桶</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aladdinding@qq.com (大猫)</managingEditor><webMaster>aladdinding@qq.com (大猫)</webMaster><lastBuildDate>Fri, 18 Nov 2022 10:53:13 +0800</lastBuildDate><atom:link href="https://aladdinding.cn/posts/" rel="self" type="application/rss+xml"/><item><title>为什么 Proxy 认证要发两次请求</title><link>https://aladdinding.cn/%E4%B8%BA%E4%BB%80%E4%B9%88proxy%E8%AE%A4%E8%AF%81%E8%A6%81%E5%8F%91%E4%B8%A4%E6%AC%A1%E8%AF%B7%E6%B1%82/</link><pubDate>Fri, 18 Nov 2022 10:53:13 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E4%B8%BA%E4%BB%80%E4%B9%88proxy%E8%AE%A4%E8%AF%81%E8%A6%81%E5%8F%91%E4%B8%A4%E6%AC%A1%E8%AF%B7%E6%B1%82/</guid><description>现象 这段时间通过上服务器观察日志，发现部分语言的 HTTP 客户端在进行代理认证的时候会发送两次 HTTP 请求 第一次请求不会携带任何认证信息 第二次请求才会携带</description></item><item><title>设计模式之创建型模式</title><link>https://aladdinding.cn/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</link><pubDate>Mon, 24 Oct 2022 16:20:06 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%88%9B%E5%BB%BA%E5%9E%8B%E6%A8%A1%E5%BC%8F/</guid><description>单例模式 是保证一个类仅有一个实例，并提供一个访问它的全局访问点。 简单工厂模式 通过专门定义一个类来负责创建其他类的实例，被创建的实例通常都具有</description></item><item><title>面向对象设计原则</title><link>https://aladdinding.cn/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</link><pubDate>Fri, 07 Oct 2022 16:06:38 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</guid><description>面向对象设计原则为支持可维护性复用而诞生，这些原则蕴含在很多设计模式中，它们是从许多设计方案中总结出的指导性原则。 单一职责原则 类的职责单一，</description></item><item><title>GRPC发送已经序列化好的数据</title><link>https://aladdinding.cn/grpc%E5%8F%91%E9%80%81%E5%B7%B2%E7%BB%8F%E5%BA%8F%E5%88%97%E5%8C%96%E5%A5%BD%E7%9A%84%E6%95%B0%E6%8D%AE/</link><pubDate>Thu, 01 Sep 2022 10:59:39 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/grpc%E5%8F%91%E9%80%81%E5%B7%B2%E7%BB%8F%E5%BA%8F%E5%88%97%E5%8C%96%E5%A5%BD%E7%9A%84%E6%95%B0%E6%8D%AE/</guid><description>场景 在之前的 gRPC 系统中加了个 redis 缓存临时缓冲要上报的数据，对于数据反复序列化肯定是有性能损耗的 而且 gRPC 提供的接口似乎没有可以直接发送已经序列化好的</description></item><item><title>GRPC框架入门</title><link>https://aladdinding.cn/grpc%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</link><pubDate>Thu, 28 Jul 2022 18:41:06 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/grpc%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8/</guid><description>近期上线项目优化，需要将节点与 master 交互方式从之前的短轮训改进到长连接，同时也需要改进序列化传输方式（之前使用的是序列化 pythoon 对象的 ujosn），很</description></item><item><title>Web安全基础学习</title><link>https://aladdinding.cn/web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</link><pubDate>Wed, 11 May 2022 16:46:47 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</guid><description>首先说下自己并不是专门做安全的，此次总结也确实是工作中遇到了这类问题需要解决 当然如果你自己有过搭建服务的经历，或许会在服务的访问记录中看到各</description></item><item><title>Git常用命令总结</title><link>https://aladdinding.cn/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 24 Apr 2022 17:09:28 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid><description>Git Documentation Git 教程 - 廖雪峰 Git 常用命令 git init 初始化本地 git 环境 git clone &amp;lt;repository&amp;gt; 克隆一份代码到本地仓库 git pull 把远程仓库代码更新到本地，等于 git fetch + git merge git pull --rebase origin master 强制把远程</description></item><item><title>使用air实现go程序热加载</title><link>https://aladdinding.cn/%E4%BD%BF%E7%94%A8air%E5%AE%9E%E7%8E%B0go%E7%A8%8B%E5%BA%8F%E7%83%AD%E5%8A%A0%E8%BD%BD/</link><pubDate>Thu, 21 Apr 2022 16:21:53 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E4%BD%BF%E7%94%A8air%E5%AE%9E%E7%8E%B0go%E7%A8%8B%E5%BA%8F%E7%83%AD%E5%8A%A0%E8%BD%BD/</guid><description>在使用 Python Web 框架 Django 本地 runserver 启动后修改了代码，程序够自动重新加载并执行（live-reload），在开发调试阶段非常实用，可以提高开发效率。 在使用</description></item><item><title>Protocol Buffers协议使用小结</title><link>https://aladdinding.cn/protocol-buffers%E5%8D%8F%E8%AE%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</link><pubDate>Thu, 14 Apr 2022 10:46:52 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/protocol-buffers%E5%8D%8F%E8%AE%AE%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</guid><description>官方文档 Language Guide (proto3) protocol-buffers 代码生成指南 网络上关于 Protocol Buffers 的翻译已经很多了，这里就不再重新写一遍了，主要记录一下常用语法。其实就是定义一个 .proto 文件，然后根据不</description></item><item><title>武汉海昌极地海洋世界游玩tips</title><link>https://aladdinding.cn/%E6%AD%A6%E6%B1%89%E6%B5%B7%E6%98%8C%E6%9E%81%E5%9C%B0%E6%B5%B7%E6%B4%8B%E4%B8%96%E7%95%8C%E6%B8%B8%E7%8E%A9tips/</link><pubDate>Mon, 04 Apr 2022 16:30:01 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E6%AD%A6%E6%B1%89%E6%B5%B7%E6%98%8C%E6%9E%81%E5%9C%B0%E6%B5%B7%E6%B4%8B%E4%B8%96%E7%95%8C%E6%B8%B8%E7%8E%A9tips/</guid><description>必看表演 狂欢大巡游（全园区的大迅游，上午下午各一次，特别热闹） 功夫山庄（动物表演，有海象、海豹、水獭等，建议提前10分钟占好位置） 极地奇缘（</description></item></channel></rss>