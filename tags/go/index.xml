<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on 阿拉丁的博客</title><link>https://aladdinding.cn/tags/go/</link><description>Recent content in Go on 阿拉丁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 29 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://aladdinding.cn/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 语言跨平台编译</title><link>https://aladdinding.cn/post/go-%E8%AF%AD%E8%A8%80%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</link><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate><guid>https://aladdinding.cn/post/go-%E8%AF%AD%E8%A8%80%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91/</guid><description>go build 使用：
1 go build [-o 输出名] [-i] [编译标记] [包名] 默认我们 go build 的可执行文件都是当前操作系统可执行的文件，如果我想在 macOS 下编译一个 linux 下可执行文件，那需要怎么做呢？
只需要指定目标操作系统的平台和处理器架构即可，例如 Window 平台终端下按如下方式指定环境变量。
1 2 3 SET CGO_ENABLED=0 // 禁用 CGO SET GOOS=linux // 目标平台是 linux SET GOARCH=amd64 // 目标处理器架构是 amd64 macOS 编译 Linux 和 Windows 平台 64 位 可执行程序:
1 2 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build Linux 编译 Mac 和 Windows 平台 64 位可执行程序：</description></item></channel></rss>