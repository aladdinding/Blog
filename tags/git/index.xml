<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on 大猫的本地回环地址</title><link>https://aladdinding.cn/tags/git/</link><description>Recent content in Git on 大猫的本地回环地址</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 24 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://aladdinding.cn/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git常用模版文件</title><link>https://aladdinding.cn/post/git%E5%B8%B8%E7%94%A8%E6%A8%A1%E7%89%88%E6%96%87%E4%BB%B6/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://aladdinding.cn/post/git%E5%B8%B8%E7%94%A8%E6%A8%A1%E7%89%88%E6%96%87%E4%BB%B6/</guid><description>.gitignore # vim *.swp *.swo *.so # vim plugin # https://github.com/tpope/vim-projectionist .projections.json # TOOD file TODO.md TODO.txt todo.md todo.txt # python .ropeproject/ *.pyc *.pyo # testfile run_admin.sh wnntest.sh wnnrun.sh wnntodo.md run.sh .python-version .tmp # mvn mvn_publish.sh # js/node .tern-port .tern-project t.js node_modules/ # ag silver searcher .agignore # IDE .idea # mac .DS_Store # personal mydoc # golang .gometalinter.json .netrwhist # redis dump.rdb Commit 模版 # head: &amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt; # - type: feat, fix, docs, style, refactor, test, chore # - scope: can be empty (eg.</description></item><item><title>Git 常用命令总结</title><link>https://aladdinding.cn/post/git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://aladdinding.cn/post/git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/</guid><description>Git Documentation
Git 教程 - 廖雪峰
Git 常用命令 git init 初始化本地 git 环境 git clone &amp;lt;repository&amp;gt; 克隆一份代码到本地仓库 git pull 把远程仓库代码更新到本地，等于 git fetch + git merge git pull --rebase origin master 强制把远程仓库的代码更新到当前分支上面 git fetch 把远程库的代码更新到本地 git add . 把本地改动过的文件添加到暂存区中 git commit -m '&amp;lt;commit message&amp;gt;' 把暂存区中的修改提交到本地库 git push 把本地库的修改提交到远程库中 git push origin &amp;lt;branch name&amp;gt; 提交一个分支到远程库中 git branch -r/-a 查看远程分支 / 全部分支 git checkout master/bugfix 切换到某个分支 git checkout -b bugfix 新建 bugfix 分支 git checkout -d bugfix 删除 bugfix 分支 git merge master 假设当前在 bugfix 分支上，把 master 分支上的修改同步到 bugfix 分支上 git merge tool 调用 merge 工具 git stash 把未完成的修改保存起来 git stash list 查看所有保存列表 git stash pop 恢复本地分支到缓存状态 git blame &amp;lt;file name&amp;gt; 查看某个文件每一行的修改记录，谁在什么时候修改的 git status 查看当前分支有哪些修改 git log 查看当前分支上面的日志信息 git diff 查看当前没有 add 的内容 git diff --cached 查看已经 add 但是没有 commit 的内容 git diff HEAD 上面两个命令显示内容的合并 git reset --hard HEAD 撤销本地修改 团队协作 Git 流程 克隆新项目，完成功能并提交 git clone &amp;lt;repository&amp;gt; 克隆代码仓库 git checkout -b &amp;lt;branch name&amp;gt; 新建分支 &amp;lt;modify your code&amp;gt; 完成功能的开发，代码的修改 git add .</description></item></channel></rss>