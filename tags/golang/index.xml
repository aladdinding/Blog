<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Golang - Tag - 大猫的比特垃圾桶</title><link>https://aladdinding.cn/tags/golang/</link><description>Golang - Tag - 大猫的比特垃圾桶</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>aladdinding@qq.com (大猫)</managingEditor><webMaster>aladdinding@qq.com (大猫)</webMaster><lastBuildDate>Thu, 21 Apr 2022 16:21:53 +0800</lastBuildDate><atom:link href="https://aladdinding.cn/tags/golang/" rel="self" type="application/rss+xml"/><item><title>使用air实现go程序热加载</title><link>https://aladdinding.cn/%E4%BD%BF%E7%94%A8air%E5%AE%9E%E7%8E%B0go%E7%A8%8B%E5%BA%8F%E7%83%AD%E5%8A%A0%E8%BD%BD/</link><pubDate>Thu, 21 Apr 2022 16:21:53 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/%E4%BD%BF%E7%94%A8air%E5%AE%9E%E7%8E%B0go%E7%A8%8B%E5%BA%8F%E7%83%AD%E5%8A%A0%E8%BD%BD/</guid><description>在使用 Python Web 框架 Django 本地 runserver 启动后修改了代码，程序够自动重新加载并执行（live-reload），在开发调试阶段非常实用，可以提高开发效率。 在使用</description></item><item><title>Golang中的string、rune和byte</title><link>https://aladdinding.cn/golang%E4%B8%AD%E7%9A%84stringrune%E5%92%8Cbyte/</link><pubDate>Fri, 12 Nov 2021 18:10:50 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/golang%E4%B8%AD%E7%9A%84stringrune%E5%92%8Cbyte/</guid><description>Go 语言中的 byte 和 rune 实际上是 uin8 和 int32 类型 byte 一般来表示一些原始数据（如网络中的数据传输） rune 则用来表示 Unciode 字符 在 go 中 string 的底层用的就是 byte 字节数组存储的，它</description></item><item><title>Golang跨平台编译及优化二进制体积</title><link>https://aladdinding.cn/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E5%8F%8A%E4%BC%98%E5%8C%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%93%E7%A7%AF/</link><pubDate>Fri, 29 Oct 2021 17:11:02 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/golang%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%BC%96%E8%AF%91%E5%8F%8A%E4%BC%98%E5%8C%96%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%93%E7%A7%AF/</guid><description>编译 1 go build [-o 输出名] [-i] [编译标记] [包名] 默认我们 go build 的可执行文件都是当前操作系统可执行的文件，如果我想在 macOS 下编译一个 linux 下可执行文件，那需要</description></item><item><title>Go中的Interfaces类型与值、指针接收者</title><link>https://aladdinding.cn/go%E4%B8%AD%E7%9A%84interfaces%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%80%BC%E6%8C%87%E9%92%88%E6%8E%A5%E6%94%B6%E8%80%85/</link><pubDate>Sun, 25 Jul 2021 11:01:34 +0800</pubDate><author>大猫</author><guid>https://aladdinding.cn/go%E4%B8%AD%E7%9A%84interfaces%E7%B1%BB%E5%9E%8B%E4%B8%8E%E5%80%BC%E6%8C%87%E9%92%88%E6%8E%A5%E6%94%B6%E8%80%85/</guid><description>以下代码有几点说明： Cat 和 Dog 都实现了 Animal 接口的 SetName 方法 Cat 实现的接口为值接收者（value receiver） Dog 实现的接口为指针接收者（pointer</description></item></channel></rss>