<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gRPC on 大猫的博客</title><link>https://aladdinding.cn/tags/grpc/</link><description>Recent content in gRPC on 大猫的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 28 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://aladdinding.cn/tags/grpc/index.xml" rel="self" type="application/rss+xml"/><item><title>gRPC框架入门demo</title><link>https://aladdinding.cn/post/grpc%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8demo/</link><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><guid>https://aladdinding.cn/post/grpc%E6%A1%86%E6%9E%B6%E5%85%A5%E9%97%A8demo/</guid><description>近期上线项目优化，需要将节点与master交互方式从之前的短轮训改进到长连接，同时也需要改进序列化传输方式（之前使用的是序列化pythoon对象的ujosn），很自然就想到了grpc
gRPC是什么 gRPC是一种现代化开源的高性能RPC框架，能够运行于任意环境之中。最初由谷歌进行开发。它使用HTTP/2作为传输协议。
使用gRPC， 我们可以一次性的在一个.proto文件中定义服务并使用任何支持它的语言去实现客户端和服务端，反过来，它们可以应用在各种场景中，从Google的服务器到你自己的平板电脑—— gRPC帮你解决了不同语言及环境间通信的复杂性。使用protocol buffers还能获得其他好处，包括高效的序列化，简单的IDL以及容易进行接口更新。总之一句话，使用gRPC能让我们更容易编写跨语言的分布式代码。
IDL（Interface description language）是指接口描述语言，是用来描述软件组件接口的一种计算机语言，是跨平台开发的基础。IDL通过一种中立的方式来描述接口，使得在不同平台上运行的对象和用不同语言编写的程序可以相互通信交流；比如，一个组件用C++写成，另一个组件用Go写成。
编写.proto文件 官方提供的教学场景（导航服务）很适合入门，覆盖了RPC的四种模式，创建route_guide.proto文件，定义以下消息和服务
1// Copyright 2015 gRPC authors. 2// 3// Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); 4// you may not use this file except in compliance with the License. 5// You may obtain a copy of the License at 6// 7// http://www.apache.org/licenses/LICENSE-2.0 8// 9// Unless required by applicable law or agreed to in writing, software 10// distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS, 11// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</description></item></channel></rss>