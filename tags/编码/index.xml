<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>编码 on 个人文章分享</title><link>https://aladdinding.cn/tags/%E7%BC%96%E7%A0%81/</link><description>Recent content in 编码 on 个人文章分享</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 02 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://aladdinding.cn/tags/%E7%BC%96%E7%A0%81/index.xml" rel="self" type="application/rss+xml"/><item><title>搞清楚字符集和字符编码</title><link>https://aladdinding.cn/post/%E6%90%9E%E6%B8%85%E6%A5%9A%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</link><pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate><guid>https://aladdinding.cn/post/%E6%90%9E%E6%B8%85%E6%A5%9A%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</guid><description>前言 目前主流的计算机的确都是以二进制形式存储数据的。如 00100101（其中的 0 是一个 bit，1 也是一个 bit，这 8 个 bit 就是一个 byte）。通常为了更方便表示二进制数据，也可以转换成 16 进制表示出来，0010 0101 就可以用 16 进制的 0x25 来表示（1byte=2 个 16 进制位 = 8bit=8 个二进制位）。一个字节一共可以用来表示 256 种不同的状态（每一个状态对应一个符号，就是 256 个符号，从 00000000 到 11111111）
字符集（character set）：规定了某个字符文字对应的二进制数字存放方式（编码）和某串二进制数值代表了哪个文字（解码）的转换关系。
字符编码（character encoding）：编码字符集和实际存储数值之间的转换关系，也就是字符转换成二进制数据的规则（要和对应关系区分）。
英文编码 ASCII 码 ASCII（美国信息交换标准码）是美国国家标准定制的一套基于拉丁字母的电脑编码系统，可表示数字、字母等字符符号。一个 ASCII 码在计算机中由一个字节存储，因此它最多可表示 256 个符号（一个字节为 8 位，2 的 8 次方等于 256）。实事上，标准的 ASCII 编码时只用到了低 7 位 （最高位统一为 0，或者为奇偶校验位），故 ASCII 码可表示的数据一共只有 128 个（2 的 7 次方）。这 128 个字符中，其中 95 个为可显示字符（可打印字符，比如数字、字母、标点符号），还有 33 个如比如“换行” 之类的控制字符（控制字符主要是用来操控已经处理过的文字）。最后附上了 ASCII 码表：</description></item></channel></rss>